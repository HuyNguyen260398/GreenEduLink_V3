@page "/posts/create"
@inject IPostService _postService
@inject NavigationManager _navManager

<h1>Create Post</h1>
<br />
<br />
<br />

<EditForm Model="post" OnValidSubmit="HandleCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="title">Title</label>
        <InputText @bind-Value="post.Title" class="form-control" id="title" />
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputTextArea @bind-Value="post.Description" class="form-control" id="description" />
    </div>
    <div class="form-group">
        <label for="category-id">Category Id</label>
        <InputNumber @bind-Value="post.CategoryId" class="form-control" id="category-id" />
    </div>
    <div class="form-group">
        <label for="sub-category-id">Sub-Category Id</label>
        <InputNumber @bind-Value="post.SubCategoryId" class="form-control" id="sub-category-id" />
    </div>
    <div class="form-group">
        <label for="slug">Slug</label>
        <InputText @bind-Value="post.Slug" class="form-control" id="slug" />
    </div>
    <div class="form-group">
        <label for="thumbnail">Thumbnail</label>
        <InputText @bind-Value="post.Thumbnail" class="form-control" id="thumbnail" />
    </div>
    <div class="form-group">
        <label for="content">Content</label>
        <InputTextArea @bind-Value="post.Content" class="form-control" id="content" />
    </div>
    <button class="btn btn-primary mt-4" type="submit">
        <span class="oi oi-plus"></span>
        Create Post
    </button>
    <button @onclick="BackToList" class="btn btn-secondary mt-4">
        <span class="oi oi oi-arrow-left"></span>
        Back To List
    </button>
</EditForm>

@code {
    private PostDto post = new();

    private async Task HandleCreate()
    {
        post.Thumbnail = "";
        post.CreatedAt = DateTime.Now;
        post.Views = 0;
        post.Comments = 0;

        var response = await _postService.CreatePostAsync<ResponseDto>(post);
        if (response != null && response.IsSuccess)
        {
            BackToList();
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/posts");
    }
}
