@page "/post/view/{postId}"
@inject IPostService _postService
@inject NavigationManager _navManager

<h1>View Post</h1>
<br />
<hr />
<br />

@if (int.Parse(postId) < 1 || string.IsNullOrWhiteSpace(postId))
{
    <h2>Invalid selection. Please try again!</h2>
}
else if (post == null)
{
    <h2>Loading post details</h2>
}
else
{
    <div class="row">
        <div class="col-md-8">
            <table class="table table-responsive">
                <tr>
                    <td><strong>Title</strong></td>
                    <td>@post.Title</td>
                </tr>
                <tr>
                    <td><strong>Description</strong></td>
                    <td>@post.Description</td>
                </tr>
                <tr>
                    <td><strong>Category Id</strong></td>
                    <td>@post.CategoryId</td>
                </tr>
                <tr>
                    <td><strong>Sub-Category Id</strong></td>
                    <td>@post.SubCategoryId</td>
                </tr>
                <tr>
                    <td><strong>Slug</strong></td>
                    <td>@post.Slug</td>
                </tr>
                <tr>
                    <td><strong>Thumbnail</strong></td>
                    <td>@post.Thumbnail</td>
                </tr>
                <tr>
                    <td><strong>Content</strong></td>
                    <td>@post.Content</td>
                </tr>
                <tr>
                    <td><strong>Created At</strong></td>
                    <td>@post.CreatedAt</td>
                </tr>
                <tr>
                    <td><strong>Updated At</strong></td>
                    <td>@post.UpdatedAt</td>
                </tr>
                <tr>
                    <td><strong>Published At</strong></td>
                    <td>@post.PublishedAt</td>
                </tr>
            </table>
        </div>
    </div>
}

<button class="btn btn-outline-warning" @onclick="GoToEdit">
    <span class="oi oi-pencil"></span>
    Edit Book
</button>
<button class="btn btn-outline-danger" @onclick="GoToDelete">
    <span class="oi oi-trash"></span>
    Delete Book
</button>
<button class="btn btn-outline-secondary" @onclick="BackToList">
    <span class="oi oi-arrow-left"></span>
    Back to list
</button>

@code {
    [Parameter]
    public string postId { get; set; }
    private PostDto post = new();

    protected override async Task OnInitializedAsync()
    {
        var response = await _postService.GetPostByIdAsync<ResponseDto>(Convert.ToInt32(postId));
        if (response != null && response.IsSuccess)
        {
            post = JsonConvert.DeserializeObject<PostDto>(response.Result.ToString());
        }
    }

    private void GoToEdit()
    {
        _navManager.NavigateTo($"/post/edit/{postId}");
    }

    private void GoToDelete()
    {
        _navManager.NavigateTo($"/post/delete/{postId}");
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/posts");
    }
}
